{"version":3,"sources":["views/apps/ro-configuration/OutletForm.js","../node_modules/reactstrap/es/Form.js"],"names":["tankOptions","mpdOptions","bayOptions","nozzleOptions","OutletForm","props","handleChangeTank","selectedTankOption","capacityArray","productArray","setState","console","log","state","filteredCapTank","tank_map","filter","event","_id","value","obj","length","selectedTankCapacity","capacity_litre","label","push","tankCapacityOptions","filteredProTank","obj1","selectedTankProduct","product_map","tankProductOptions","handleChangeMapTank","selectedMapTankOption","handleChangeMPD","selectedMpdOption","bayArray","filteredBay","mpd_map","bayObj","bay_map","map","bay","bayToMpdOptions","handleChangeBayToMpd","selectedBayToMpdOptions","handleChangeBay","selectedBayOptions","nozzleArray","filteredNozzle","nozzleObj","nozzle_map","nozzle","nozzleToEachBayOptions","handleChangeNozzleToEachBay","selectedNozzleToEachBayOptions","handleChangeNozzle","selectedNozzleOptions","tankArray","filteredTank","tankObj","tank","tankToNozzlesOptions","handleChangeTankToNozzle","selectedTankToNozzlesOptions","dealerId","product_map_tank","id","this","match","params","axios","post","then","response","status","data","tank_number","mpdObj","mpd","mpd_number","bay_number","nozzle_number","alert","catch","error","className","onSubmit","submitHandler","md","sm","classNamePrefix","name","defaultValue","options","onChange","isClearable","lg","style","marginTop","Ripple","color","type","React","Component","_excluded","propTypes","children","PropTypes","node","inline","bool","tag","tagPropType","innerRef","oneOfType","object","func","string","cssModule","Form","_Component","_this","call","getRef","bind","_assertThisInitialized","submit","_inheritsLoose","_proto","prototype","ref","render","_this$props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/147.416518af.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\n// import { history } from \"../../../history\";\r\nimport Select from \"react-select\";\r\n\r\nconst tankOptions = [];\r\n\r\n\r\nconst mpdOptions = [];\r\n\r\nconst bayOptions = [];\r\n\r\nconst nozzleOptions = [];\r\n\r\nclass OutletForm extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dealerId : '',\r\n      bay_map:[],\r\n      mpd_map:[],\r\n      nozzle_map:[],\r\n      tank_map:[],\r\n      product_map_tank : [],\r\n      tankProductOptions:[],\r\n      selectedTankOption:null,\r\n      selectedMapTankOption:null,\r\n      selectedTankCapacity:null,\r\n      tankCapacityOptions: [],\r\n      selectedMpdOption:null,\r\n      selectedBayOptions:null,\r\n      selectedBayToMpdOptions:null,\r\n      bayToMpdOptions:[],\r\n      nozzleToEachBayOptions:[],\r\n      selectedNozzleToEachBayOptions:null,\r\n      selectedNozzleOptions:null,\r\n      tankToNozzlesOptions:[],\r\n      selectedTankToNozzlesOptions:null\r\n      };\r\n     \r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n\r\n    \r\n    let { id } = this.props.match.params.id;\r\n    this.setState({ dealerId : id });\r\n    axios\r\n      .post(`http://3.108.185.7/nodejs/api/dealer/addeditbasicdealershipform/${this.props.match.params.id}`)\r\n      .then((response) => {\r\n        if(response.status === 200){\r\n          let data = response.data.data;\r\n          \r\n          // eslint-disable-next-line no-lone-blocks\r\n          // eslint-disable-next-line no-unused-expressions\r\n          if(data.tank_map.length > 0){\r\n           data.tank_map.map((tank) => {\r\n            let tankObj = {\r\n              value: tank._id, \r\n              label: tank.tank_number\r\n            };\r\n            tankOptions.push(tankObj);\r\n           })\r\n          }\r\n          // if(data.product_map_tank.length > 0){\r\n          //   data.product_map_tank.map((product) => {\r\n          //    let productObj = {\r\n          //      value: product._id, \r\n          //      label: product.tank_number\r\n          //    };\r\n          //    productOptions.push(productObj);\r\n          //   })\r\n          //  }\r\n   \r\n          if(data.mpd_map.length > 0){\r\n            let mpdObj = {}\r\n            // let mpdObjNew = {}\r\n            data.mpd_map.map((mpd) => {\r\n              mpdObj = {\r\n               value: mpd._id, \r\n               label: mpd.mpd_number\r\n             };\r\n             mpdOptions.push(mpdObj);\r\n            })\r\n           }\r\n\r\n           if(data.bay_map.length > 0){\r\n            data.bay_map.map((bay) => {\r\n             let bayObj = {\r\n               value: bay._id, \r\n               label: bay.bay_number\r\n             };\r\n             bayOptions.push(bayObj);\r\n            })\r\n           }\r\n\r\n           if(data.nozzle_map.length > 0){\r\n            data.nozzle_map.map((nozzle) => {\r\n             let nozzleObj = {\r\n               value: nozzle._id, \r\n               label: nozzle.nozzle_number\r\n             };\r\n             nozzleOptions.push(nozzleObj);\r\n            })\r\n           }\r\n          \r\n          this.setState({\r\n            bay_map: data.bay_map,\r\n            mpd_map: data.mpd_map,\r\n            nozzle_map: data.nozzle_map,\r\n            tank_map: data.tank_map,\r\n            // product_map_tank: data.product_map_tank,\r\n         });\r\n        }\r\n        else{\r\n          alert('Something went wrong in Dealer Shipform Api');\r\n        }\r\n        \r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n\r\n  handleChangeTank = (selectedTankOption) => {\r\n    let capacityArray = []\r\n    let productArray=[]\r\n    this.setState({ selectedTankOption }, () =>\r\n      console.log(`Option selected:`, this.state.selectedTankOption)\r\n    );\r\n      var filteredCapTank = this.state.tank_map.filter(function(event){\r\n         if(event._id === selectedTankOption.value){\r\n          return event\r\n         } \r\n         \r\n      });\r\n      let obj ={}\r\n      if(filteredCapTank.length > 0){\r\n        this.setState({ selectedTankCapacity : filteredCapTank[0].capacity_litre})\r\n         obj = {\r\n          value : filteredCapTank[0].capacity_litre,\r\n          label : filteredCapTank[0].capacity_litre\r\n        }\r\n        capacityArray.push(obj)\r\n        this.setState({ tankCapacityOptions : capacityArray})\r\n      }\r\n      var filteredProTank = this.state.tank_map.filter(function(event){\r\n        if(event._id === selectedTankOption.value){\r\n         return event\r\n        } \r\n        \r\n     });\r\n      let obj1 ={}\r\n      if(filteredProTank.length > 0){\r\n        this.setState({ selectedTankProduct: filteredProTank[0].product_map})\r\n         obj1 = {\r\n          value : filteredProTank[0].product_map,\r\n          label : filteredProTank[0].product_map\r\n        }\r\n        productArray.push(obj1)\r\n        this.setState({ tankProductOptions : productArray})\r\n      }\r\n  };\r\n  handleChangeMapTank = (selectedMapTankOption) => {\r\n    this.setState({ selectedMapTankOption }, () =>\r\n      console.log(`Option selected:`, this.state.selectedMapTankOption)\r\n    );\r\n  };\r\n     \r\n    \r\n\r\n  handleChangeMapTank = (selectedMapTankOption) => {\r\n    this.setState({ selectedMapTankOption }, () =>\r\n      console.log(`Option selected:`, this.state.selectedMapTankOption)\r\n    );\r\n  };\r\n\r\n  handleChangeMPD = (selectedMpdOption) => {\r\n    let bayArray = []\r\n    this.setState({ selectedMpdOption }, () =>\r\n      console.log(`Option selected:`, this.state.selectedMpdOption)\r\n    );\r\n    var filteredBay = this.state.mpd_map.filter(function(event){\r\n      if(event._id === selectedMpdOption.value){\r\n       return event\r\n      } \r\n   });\r\n   let bayObj ={}\r\n     if(filteredBay.length > 0){\r\n      filteredBay[0].bay_map.map((bay) => {\r\n           bayObj = {\r\n            value: bay._id, \r\n            label: bay\r\n          };\r\n          //bayOptions.push(bayObj);\r\n          bayArray.push(bayObj)\r\n        })\r\n       \r\n       this.setState({ bayToMpdOptions : bayArray})\r\n     }\r\n  };\r\n\r\n  handleChangeBayToMpd = (selectedBayToMpdOptions) => {\r\n    this.setState({ selectedBayToMpdOptions }, () =>\r\n      console.log(`Option selected:`, this.state.selectedBayToMpdOptions)\r\n    );\r\n  };\r\n\r\n  handleChangeBay = (selectedBayOptions) => {\r\n    let nozzleArray = []\r\n    this.setState({ selectedBayOptions }, () =>\r\n      console.log(`Option selected:`, this.state.selectedBayOptions)\r\n    );\r\n    var filteredNozzle = this.state.bay_map.filter(function(event){\r\n      if(event._id === selectedBayOptions.value){\r\n       return event\r\n      } \r\n   });\r\n   let nozzleObj ={}\r\n     if(filteredNozzle.length > 0){\r\n      filteredNozzle[0].nozzle_map.map((nozzle) => {\r\n        nozzleObj = {\r\n            value: nozzle._id, \r\n            label: nozzle\r\n          };\r\n          nozzleArray.push(nozzleObj)\r\n        })\r\n        \r\n       this.setState({ nozzleToEachBayOptions : nozzleArray})\r\n     }\r\n  };\r\n\r\n  handleChangeNozzleToEachBay = (selectedNozzleToEachBayOptions) => {\r\n    this.setState({ selectedNozzleToEachBayOptions }, () =>\r\n      console.log(`Option selected:`, this.state.selectedNozzleToEachBayOptions)\r\n    );\r\n  };\r\n\r\n  handleChangeNozzle = (selectedNozzleOptions) => {\r\n    let tankArray = []\r\n    this.setState({ selectedNozzleOptions }, () =>\r\n      console.log(`Option selected:`, this.state.selectedNozzleOptions)\r\n    );\r\n    var filteredTank = this.state.nozzle_map.filter(function(event){\r\n      if(event._id === selectedNozzleOptions.value){\r\n       return event\r\n      } \r\n   });\r\n   let tankObj ={}\r\n     if(filteredTank.length > 0){\r\n      filteredTank[0].tank_map.map((tank) => {\r\n        tankObj = {\r\n            value: tank._id, \r\n            label: tank\r\n          };\r\n          tankArray.push(tankObj)\r\n        })\r\n        \r\n       this.setState({ tankToNozzlesOptions : tankArray})\r\n     }\r\n  };\r\n\r\n  handleChangeTankToNozzle = (selectedTankToNozzlesOptions) => {\r\n    this.setState({ selectedTankToNozzlesOptions }, () =>\r\n      console.log(`Option selected:`, this.state.selectedTankToNozzlesOptions)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      selectedTankOption,\r\n    //   product_map_tank,\r\n    //   selectedMapTankOption,\r\n    //   selectedMapProductOption,\r\n    //  selectedTankCapacity,\r\n      tankProductOptions,\r\n      tankCapacityOptions,\r\n      selectedMpdOption,\r\n      //bayOptions,\r\n      selectedBayOptions,\r\n      // bayToMpdOptions,\r\n      // selectedBayToMpdOptions,\r\n      // nozzleToEachBayOptions,\r\n      // selectedNozzleToEachBayOptions,\r\n      selectedNozzleOptions,\r\n      // tankToNozzlesOptions,\r\n      // selectedTankToNozzlesOptions\r\n    } = this.state\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Outlet</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n            <Row>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <h5 className=\"my-1 text-bold-600\">Select Tank</h5>\r\n                  <Select\r\n                    className=\"React\"\r\n                    classNamePrefix=\"select\"\r\n                    name=\"tank\" \r\n                    defaultValue={tankOptions[1]}\r\n                    options={tankOptions}\r\n                    value={selectedTankOption}\r\n                    onChange={this.handleChangeTank}\r\n                  />\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <h5 className=\"my-1 text-bold-600\">Product Mapped to Tank</h5>\r\n                  <Select\r\n                    className=\"React\"\r\n                    classNamePrefix=\"select\"\r\n                    name=\"product_map_tank\"            \r\n                    isClearable={true}\r\n                    defaultValue={tankProductOptions[1]}\r\n                    options={tankProductOptions}\r\n                    value={tankProductOptions[1]}  \r\n                  />\r\n              </Col>\r\n              <Col md=\"6\" sm=\"12\">\r\n                <h5 className=\"my-1 text-bold-600\">Capacity</h5>\r\n              <Select\r\n                className=\"React\"\r\n                classNamePrefix=\"select\"         \r\n                onChange={this.handleChangeTank} \r\n                name=\"capacity\"         \r\n                isClearable={true}\r\n                value={tankCapacityOptions[1]}\r\n                defaultValue={tankCapacityOptions[1]}\r\n                options={tankCapacityOptions}\r\n              />\r\n            </Col>\r\n            <Col md=\"6\" sm=\"12\">\r\n              <h5 className=\"my-1 text-bold-600\">Select Mpd</h5>\r\n              <Select\r\n                className=\"React\"\r\n                classNamePrefix=\"select\"\r\n                name=\"mpd\"\r\n                defaultValue={mpdOptions[1]}\r\n                options={mpdOptions}\r\n                value={selectedMpdOption}\r\n                onChange={this.handleChangeMPD}\r\n                isClearable={true}\r\n              />\r\n            </Col>\r\n            {/* <Col md=\"6\" sm=\"12\">\r\n              <h5 className=\"my-1 text-bold-600\">Map Correct Bay to Mpd</h5>\r\n              <Select\r\n                className=\"React\"\r\n                classNamePrefix=\"select\"            \r\n                name=\"bay_to_mpd\"          \r\n                isClearable={true}\r\n                defaultValue={selectedBayToMpdOptions}\r\n                options={bayToMpdOptions}\r\n                onChange={this.handleChangeBayToMpd}\r\n              />\r\n            </Col> */}\r\n            <Col md=\"6\" sm=\"12\">\r\n              <h5 className=\"my-1 text-bold-600\">Select Bay</h5>\r\n              <Select\r\n                className=\"React\"\r\n                classNamePrefix=\"select\"           \r\n                name=\"bay\"              \r\n                isClearable={true}\r\n                defaultValue={selectedBayOptions}\r\n                options={bayOptions}\r\n                onChange={this.handleChangeBay}\r\n              />\r\n            </Col>\r\n            {/* <Col md=\"6\" sm=\"12\">\r\n              <h5 className=\"my-1 text-bold-600\">\r\n                Map Correct Nozzle to Each Bay\r\n              </h5>\r\n              <Select\r\n                className=\"React\"\r\n                classNamePrefix=\"select\"              \r\n                name=\"nozzleToEachBay\"             \r\n                isClearable={true}\r\n                defaultValue={selectedNozzleToEachBayOptions}\r\n                options={nozzleToEachBayOptions}\r\n                onChange={this.handleChangeNozzleToEachBay}\r\n              />\r\n            </Col> */}\r\n            <Col md=\"6\" sm=\"12\">\r\n              <h5 className=\"my-1 text-bold-600\">Select Nozzle</h5>\r\n              <Select\r\n                className=\"React\"\r\n                classNamePrefix=\"select\"           \r\n                name=\"clear\"            \r\n                isClearable={true}\r\n                defaultValue={selectedNozzleOptions}\r\n                options={nozzleOptions}\r\n                onChange={this.handleChangeNozzle}\r\n              />\r\n            </Col>\r\n            {/* <Col md=\"6\" sm=\"12\" style={{ marginBottom: 15 }}>\r\n              <h5 className=\"my-1 text-bold-600\">Map Tank to Nozzles</h5>\r\n              <Select\r\n                className=\"React\"\r\n                classNamePrefix=\"select\"  \r\n                name=\"clear\"    \r\n                isClearable={true}\r\n                defaultValue={selectedTankToNozzlesOptions}\r\n                options={tankToNozzlesOptions}\r\n                onChange={this.handleChangeTankToNozzle}\r\n              />\r\n            </Col> */}\r\n            </Row>\r\n             <Row>\r\n                <Col\r\n                  lg=\"6\"\r\n                  md=\"6\"\r\n                  sm=\"6\"\r\n                  className=\"mb-2\"\r\n                  style={{  marginTop:\"10px\" }}\r\n                >\r\n           \r\n              <Button.Ripple\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                className=\"mr-1 mb-1\"\r\n              >\r\n                Submit\r\n              </Button.Ripple>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n        </CardBody>\r\n      </Card>\r\n      \r\n    );\r\n  }\r\n}\r\nexport default OutletForm;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"];\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;"],"sourceRoot":""}