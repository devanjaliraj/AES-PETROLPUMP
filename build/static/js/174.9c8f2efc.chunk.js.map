{"version":3,"sources":["views/apps/shiftmanagement/LubricantSalesList.js","axiosConfig.js"],"names":["LubricantSales","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","field","filter","width","pinned","window","innerWidth","cellRendererFramework","params","className","data","dealer_name1","dealer_name","email","date","lube_grade","grade","total_pieces_available","no_of_pieces","no_of_pieces_sold","selling_price","dsm","dsm_name","mode_of_pyament","mode","size","color","onClick","history","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axiosConfig","get","then","response","console","log","mfp","catch","error","JSON","stringify","id","a","this","Fragment","breadCrumbTitle","tag","length","right","placeholder","onChange","e","target","value","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component","instance","axios","create","baseURL"],"mappings":"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","file":"static/js/174.9c8f2efc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { history } from \"../../../history\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { ChevronDown, Trash2,  Edit } from \"react-feather\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\n\r\nclass LubricantSales extends React.Component {\r\n  state = {\r\n    rowData: null,\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"Dealer Name\",\r\n        field: \"dealer_name1.dealer_name\",\r\n        filter: false,\r\n        width: 200,\r\n        pinned: window.innerWidth > 992 ? \"left\" : false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.dealer_name1?.dealer_name}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Email\",\r\n        field: \"dealer_name1.email\",\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.dealer_name1?.email}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Date\",\r\n        field: \"date\",\r\n        width: 100,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.date}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Lube Grade\",\r\n        field: \"lube_grade.grade\",\r\n        width: 100,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.lube_grade?.grade}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Pieces Avail\",\r\n        field: \"total_pieces_available.no_of_pieces\",\r\n        width: 160,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.total_pieces_available?.no_of_pieces}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Sold prices\",\r\n        field: \"no_of_pieces_sold\",\r\n        width: 160,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.no_of_pieces_sold}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Selling price\",\r\n        field: \"selling_price\",\r\n        width: 160,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.selling_price}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Name of DSM \",\r\n        field: \"dsm.dsm_name\",\r\n        filter: false,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.dsm?.dsm_name}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Payment Mode\",\r\n        field: \"mode_of_pyament.mode\",\r\n        filter: false,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.mode_of_pyament?.mode}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        width: 120,\r\n        pinned: window.innerWidth > 992 ? \"right\" : false,\r\n\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Edit\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"blue\"\r\n                onClick={() =>\r\n                  history.push(\r\n                    `/#/app/shiftManagement/lubricantForm/${params.data._id}`\r\n                  )\r\n                }\r\n              />\r\n              <Trash2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.runthisfunction(params.data._id);\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Mode of Payment\r\n    axiosConfig\r\n      .get(\"/dealer/allmode\")\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n        this.setState({ mfp: response.data.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    axiosConfig\r\n      .get(\"/dealer/alllubricantsales\")\r\n      .then((response) => {\r\n        let rowData = response.data.data;\r\n        JSON.stringify(rowData);\r\n        this.setState({ rowData });\r\n      });\r\n  }\r\n  async runthisfunction(id) {\r\n    console.log(id);\r\n    await axiosConfig\r\n      .get(`/dealer/deletelubricantsales/${id}`)\r\n      .then((response) => {\r\n        console.log(response);\r\n      });\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Breadcrumbs breadCrumbTitle=\"Lubricants Sale List\" />\r\n        <Card className=\"overflow-hidden agGrid-card\">\r\n          <CardBody className=\"py-0\">\r\n            {this.state.rowData === null ? null : (\r\n              <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                  <div className=\"mb-1\">\r\n                    <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                      <DropdownToggle tag=\"div\">\r\n                        {this.gridApi\r\n                          ? this.state.currenPageSize\r\n                          : \"\" * this.state.getPageSize -\r\n                            (this.state.getPageSize - 1)}{\" \"}\r\n                        -{\" \"}\r\n                        {this.state.rowData.length -\r\n                          this.state.currenPageSize * this.state.getPageSize >\r\n                        0\r\n                          ? this.state.currenPageSize * this.state.getPageSize\r\n                          : this.state.rowData.length}{\" \"}\r\n                        of {this.state.rowData.length}\r\n                        <ChevronDown className=\"ml-50\" size={15} />\r\n                      </DropdownToggle>\r\n                      <DropdownMenu right>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(20)}\r\n                        >\r\n                          20\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(50)}\r\n                        >\r\n                          50\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(100)}\r\n                        >\r\n                          100\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(134)}\r\n                        >\r\n                          134\r\n                        </DropdownItem>\r\n                      </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                  </div>\r\n                  <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                    <div className=\"table-input mr-1\">\r\n                      <Input\r\n                        placeholder=\"search...\"\r\n                        onChange={(e) => this.updateSearchQuery(e.target.value)}\r\n                        value={this.state.value}\r\n                      />\r\n                    </div>\r\n                    <div className=\"export-btn\">\r\n                      <Button.Ripple\r\n                        color=\"primary\"\r\n                        onClick={() => this.gridApi.exportDataAsCsv()}\r\n                      >\r\n                        Export as CSV\r\n                      </Button.Ripple>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <ContextLayout.Consumer>\r\n                  {(context) => (\r\n                    <AgGridReact\r\n                      gridOptions={{}}\r\n                      rowSelection=\"multiple\"\r\n                      defaultColDef={defaultColDef}\r\n                      columnDefs={columnDefs}\r\n                      rowData={rowData}\r\n                      onGridReady={this.onGridReady}\r\n                      colResizeDefault={\"shift\"}\r\n                      animateRows={true}\r\n                      floatingFilter={false}\r\n                      pagination={true}\r\n                      paginationPageSize={this.state.paginationPageSize}\r\n                      pivotPanelShow=\"always\"\r\n                      enableRtl={context.state.direction === \"rtl\"}\r\n                    />\r\n                  )}\r\n                </ContextLayout.Consumer>\r\n              </div>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default LubricantSales;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://3.108.185.7/nodejs/api\",\r\n  \r\n});\r\n\r\nexport default instance;\r\n"],"sourceRoot":""}