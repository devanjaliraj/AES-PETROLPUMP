{"version":3,"sources":["views/apps/about/AllaboutUs.js","axiosConfig.js"],"names":["AllaboutUs","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","field","width","cellRendererFramework","params","className","data","desc","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","a","axiosConfig","get","then","response","console","log","this","Fragment","breadCrumbTitle","breadCrumbParent","breadCrumbActive","render","history","onClick","push","tag","length","size","right","placeholder","onChange","e","target","value","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component","instance","axios","create","baseURL"],"mappings":"4XAsBMA,E,4MACJC,MAAQ,CACNC,QAAS,GACTC,mBAAoB,GACpBC,eAAgB,GAChBC,YAAa,GACbC,cAAe,CACbC,UAAU,EACVC,UAAU,EACVC,WAAW,EACXC,cAAc,GAEhBC,WAAY,CAwCV,CACEC,WAAY,eACZC,MAAO,OACPC,MAAO,IACPC,sBAAuB,SAACC,GACtB,OACE,yBAAKC,UAAU,4CACb,8BAAOD,EAAOE,KAAKC,SAyB3B,CACEP,WAAY,UACZC,MAAO,YACPC,MAAO,IACPC,sBAAuB,SAACC,GACtB,OACE,yBAAKC,UAAU,0BACb,kBAAC,IAAD,W,EA+CZG,YAAc,SAACJ,GACb,EAAKK,QAAUL,EAAOM,IACtB,EAAKC,cAAgBP,EAAOQ,UAC5B,EAAKC,SAAS,CACZrB,eAAgB,EAAKiB,QAAQK,2BAA6B,EAC1DrB,YAAa,EAAKgB,QAAQM,wBAC1BC,WAAY,EAAKP,QAAQQ,6B,EAI7BC,kBAAoB,SAACC,GACnB,EAAKV,QAAQW,eAAeD,I,EAG9BE,WAAa,SAACF,GACR,EAAKV,UACP,EAAKA,QAAQa,sBAAsBC,OAAOJ,IAC1C,EAAKN,SAAS,CACZrB,eAAgB2B,EAChB1B,YAAa0B,M,8FAnCnB,iCAAAK,EAAA,sEACQC,IAAYC,IAAI,mBAAmBC,MAAK,SAACC,GAC7C,IAAMtC,EAAUsC,EAAStB,KAAKA,KAC9BuB,QAAQC,IAAIxC,GACZ,EAAKuB,SAAS,CAAEvB,eAJpB,2C,0EAwCA,WAAU,IAAD,OACP,EAA+CyC,KAAK1C,MAA5CC,EAAR,EAAQA,QAASS,EAAjB,EAAiBA,WAAYL,EAA7B,EAA6BA,cAC7B,OACE,kBAAC,IAAMsC,SAAP,KACG,kBAAC,IAAD,CACCC,gBAAgB,eAChBC,iBAAiB,OACjBC,iBAAiB,iBAEnB,kBAAC,IAAD,CAAM9B,UAAU,+BAEZ,kBAAC,IAAD,CAAKA,UAAU,QACX,kBAAC,IAAD,CACA+B,OAAQ,gBAAGC,EAAH,EAAGA,QAAH,OACN,kBAAC,IAAD,CACEhC,UAAU,+BACViC,QAAS,kBACPD,EAAQE,KAAK,wBAHjB,mBAWR,kBAAC,IAAD,CAAUlC,UAAU,QACM,OAAvB0B,KAAK1C,MAAMC,QAAmB,KAC7B,yBAAKe,UAAU,8CACb,yBAAKA,UAAU,+DACb,yBAAKA,UAAU,QACb,kBAAC,IAAD,CAAsBA,UAAU,mBAC9B,kBAAC,IAAD,CAAgBmC,IAAI,OACjBT,KAAKtB,QACFsB,KAAK1C,MAAMG,eACX,GAAKuC,KAAK1C,MAAMI,aACfsC,KAAK1C,MAAMI,YAAc,GAAI,IAJpC,IAKI,IACDsC,KAAK1C,MAAMC,QAAQmD,OAClBV,KAAK1C,MAAMG,eAAiBuC,KAAK1C,MAAMI,YACzC,EACIsC,KAAK1C,MAAMG,eAAiBuC,KAAK1C,MAAMI,YACvCsC,KAAK1C,MAAMC,QAAQmD,OAAQ,IAVjC,MAWMV,KAAK1C,MAAMC,QAAQmD,OACvB,kBAAC,IAAD,CAAapC,UAAU,QAAQqC,KAAM,MAEvC,kBAAC,IAAD,CAAcC,OAAK,GACjB,kBAAC,IAAD,CACEH,IAAI,MACJF,QAAS,kBAAM,EAAKjB,WAAW,MAFjC,MAMA,kBAAC,IAAD,CACEmB,IAAI,MACJF,QAAS,kBAAM,EAAKjB,WAAW,MAFjC,MAMA,kBAAC,IAAD,CACEmB,IAAI,MACJF,QAAS,kBAAM,EAAKjB,WAAW,OAFjC,OAMA,kBAAC,IAAD,CACEmB,IAAI,MACJF,QAAS,kBAAM,EAAKjB,WAAW,OAFjC,UASN,yBAAKhB,UAAU,iDACb,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CACEuC,YAAY,YACZC,SAAU,SAACC,GAAD,OAAO,EAAK5B,kBAAkB4B,EAAEC,OAAOC,QACjDA,MAAOjB,KAAK1C,MAAM2D,SAGtB,yBAAK3C,UAAU,cACb,kBAAC,IAAO4C,OAAR,CACEC,MAAM,UACNZ,QAAS,kBAAM,EAAK7B,QAAQ0C,oBAF9B,oBASN,kBAAC,IAAcC,SAAf,MACG,SAACC,GAAD,OACC,kBAAC,cAAD,CACEC,YAAa,GACbC,aAAa,WACb7D,cAAeA,EACfK,WAAYA,EACZT,QAASA,EACTkB,YAAa,EAAKA,YAClBgD,iBAAkB,QAClBC,aAAa,EACbC,gBAAgB,EAChBC,YAAY,EACZpE,mBAAoB,EAAKF,MAAME,mBAC/BqE,eAAe,SACfC,UAAuC,QAA5BR,EAAQhE,MAAMyE,uB,GA5QtBC,IAAMC,WAwRhB5E,a,iCC9Sf,YAEM6E,EAFN,OAEiBC,EAAMC,OAAO,CAC5BC,QAAS,kCAIIH","file":"static/js/168.7f491ed2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Button,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  CardTitle,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\n// import { history } from \"../../../history\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { ChevronDown, Trash2, Edit } from \"react-feather\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nclass AllaboutUs extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      // {\r\n      //   headerName: \"Email\",\r\n      //   field: \"email\",\r\n      //   width: 200,\r\n      //   pinned: window.innerWidth > 992 ? \"left\" : false,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <span>{params.data?.dealer_id.email}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      // {\r\n      //   headerName: \" Name\",\r\n      //   field: \"name\",\r\n      //   width: 200,\r\n      //   pinned: window.innerWidth > 992 ? \"left\" : false,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <span>{params.data.dealer_id.name}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n\r\n      // {\r\n      //   headerName: \"Mobile\",\r\n      //   field: \"mobile\",\r\n      //   width: 150,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <span>{params.data.mobile}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      {\r\n        headerName: \"Descriptions\",\r\n        field: \"desc\",\r\n        width: 800,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.desc}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n\r\n\r\n      // {\r\n      //   headerName: \"Status\",\r\n      //   field: \"userverified\",\r\n      //   // filter: true,\r\n      //   width: 150,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return params.value === \"Active\" ? (\r\n      //       <div className=\"badge badge-pill badge-success\">\r\n      //         {params.data.userverified}\r\n      //       </div>\r\n      //     ) : params.value === \"Inactive\" ? (\r\n      //       <div className=\"badge badge-pill badge-warning\">\r\n      //         {params.data.userverified}\r\n      //       </div>\r\n      //     ) : null;\r\n      //   },\r\n      // },\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Route\r\n                // render={({ history }) => (\r\n                //   <Edit\r\n                //     className=\"mr-50\"\r\n                //     size=\"25px\"\r\n                //     color=\"blue\"\r\n                //     onClick={() =>\r\n                //       history.push(\r\n                //         `/app/membership/EditMembership/${params.data._id}`\r\n                //       )\r\n                //     }\r\n                //   />\r\n                // )}\r\n              />\r\n\r\n              {/* <Trash2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.runthisfunction(params.data._id);\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              /> */}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  async componentDidMount() {\r\n    await axiosConfig.get(\"/admin/allabout\").then((response) => {\r\n      const rowData = response.data.data;\r\n      console.log(rowData);\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n  // async runthisfunction(id) {\r\n  //   console.log(id);\r\n  //   await axiosConfig\r\n  //     .get(`http://3.108.185.7/nodejs/api/admin/allabout/${id}`)\r\n  //     .then((response) => {\r\n  //       console.log(response);\r\n  //     });\r\n  // }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n         <Breadcrumbs\r\n          breadCrumbTitle=\"AboutUs List\"\r\n          breadCrumbParent=\"Home\"\r\n          breadCrumbActive=\"AboutUs List\"\r\n        />\r\n        <Card className=\"overflow-hidden agGrid-card\">\r\n\r\n            <Col className=\"pt-4\">\r\n                <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-success float-right\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/about/AboutUs\")}\r\n                  >\r\n                    Add Aboutus\r\n                    </Button>\r\n                )}\r\n              />\r\n\r\n            </Col>\r\n          <CardBody className=\"py-0\">\r\n            {this.state.rowData === null ? null : (\r\n              <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                  <div className=\"mb-1\">\r\n                    <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                      <DropdownToggle tag=\"div\">\r\n                        {this.gridApi\r\n                          ? this.state.currenPageSize\r\n                          : \"\" * this.state.getPageSize -\r\n                            (this.state.getPageSize - 1)}{\" \"}\r\n                        -{\" \"}\r\n                        {this.state.rowData.length -\r\n                          this.state.currenPageSize * this.state.getPageSize >\r\n                        0\r\n                          ? this.state.currenPageSize * this.state.getPageSize\r\n                          : this.state.rowData.length}{\" \"}\r\n                        of {this.state.rowData.length}\r\n                        <ChevronDown className=\"ml-50\" size={15} />\r\n                      </DropdownToggle>\r\n                      <DropdownMenu right>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(20)}\r\n                        >\r\n                          20\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(50)}\r\n                        >\r\n                          50\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(100)}\r\n                        >\r\n                          100\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(134)}\r\n                        >\r\n                          134\r\n                        </DropdownItem>\r\n                      </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                  </div>\r\n                  <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                    <div className=\"table-input mr-1\">\r\n                      <Input\r\n                        placeholder=\"search...\"\r\n                        onChange={(e) => this.updateSearchQuery(e.target.value)}\r\n                        value={this.state.value}\r\n                      />\r\n                    </div>\r\n                    <div className=\"export-btn\">\r\n                      <Button.Ripple\r\n                        color=\"primary\"\r\n                        onClick={() => this.gridApi.exportDataAsCsv()}\r\n                      >\r\n                        Export as CSV\r\n                      </Button.Ripple>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <ContextLayout.Consumer>\r\n                  {(context) => (\r\n                    <AgGridReact\r\n                      gridOptions={{}}\r\n                      rowSelection=\"multiple\"\r\n                      defaultColDef={defaultColDef}\r\n                      columnDefs={columnDefs}\r\n                      rowData={rowData}\r\n                      onGridReady={this.onGridReady}\r\n                      colResizeDefault={\"shift\"}\r\n                      animateRows={true}\r\n                      floatingFilter={false}\r\n                      pagination={true}\r\n                      paginationPageSize={this.state.paginationPageSize}\r\n                      pivotPanelShow=\"always\"\r\n                      enableRtl={context.state.direction === \"rtl\"}\r\n                    />\r\n                  )}\r\n                </ContextLayout.Consumer>\r\n              </div>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default AllaboutUs;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://3.108.185.7/nodejs/api\",\r\n  \r\n});\r\n\r\nexport default instance;\r\n"],"sourceRoot":""}