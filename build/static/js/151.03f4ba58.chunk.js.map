{"version":3,"sources":["views/apps/ro-configuration/BankForTransactionList.js"],"names":["BankForTransactionList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","field","width","pinned","window","innerWidth","cellRendererFramework","params","className","data","dealer_name1","dealer_name","email","filter","name_of_bank","account_no","credit_limit_of_bank","intrest_rates","ifsc_code","cresit_offer","document_upload","render","history","color","size","onClick","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","id","this","props","match","axiosConfig","get","then","response","console","log","error","sm","tag","length","right","placeholder","onChange","e","target","value","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/151.03f4ba58.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Edit, Trash2, ChevronDown } from \"react-feather\";\r\n// import { history } from \"../../../history\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nclass BankForTransactionList extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"Dealer Name\",\r\n        field: \"dealer_name1.dealer_name\",\r\n        width: 200,\r\n        pinned: window.innerWidth > 992 ? \"left\" : false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.dealer_name1?.dealer_name}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Email\",\r\n        field: \"dealer_name1.email\",\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.dealer_name1?.email}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Name Of Bank \",\r\n        field: \"name_of_bank\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.name_of_bank}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Account no\",\r\n        field: \"account_no\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.account_no}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Credit limit of bank\",\r\n        field: \"credit_limit_of_bank\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.credit_limit_of_bank}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Intrest Rates\",\r\n        field: \"intrest_rates\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.intrest_rates}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"IFSC Code\",\r\n        field: \"ifsc_code\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.ifsc_code}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Credit Offer from Bank Valid upto \",\r\n        field: \"cresit_offer\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.cresit_offer}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Documents upload\",\r\n        field: \"document_upload\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.document_upload}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      // {\r\n      //   headerName: \"Status\",\r\n      //   field: \"status\",\r\n      //   filter: true,\r\n      //   width: 150,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return params.value === \"Active\" ? (\r\n      //       <div className=\"badge badge-pill badge-success\">\r\n      //         {params.data.status}\r\n      //       </div>\r\n      //     ) : params.value === \"Inactive\" ? (\r\n      //       <div className=\"badge badge-pill badge-warning\">\r\n      //         {params.data.status}\r\n      //       </div>\r\n      //     ) : null;\r\n      //   },\r\n      // },\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n\r\n        width: 150,\r\n        pinned: window.innerWidth > 992 ? \"right\" : false,\r\n\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Edit\r\n                    className=\"mr-50\"\r\n                    color=\"blue\"\r\n                    size=\"25px\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        `/app/ro-configuration/editBankForTransaction/${params.data._id}`\r\n                      )\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n              <Trash2\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.runthisfunction(params.data._id);\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n    await axiosConfig.get(`/dealer/allbankApp/${id}`).then((response) => {\r\n      const rowData = response.data.data;\r\n      console.log(rowData);\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n  async runthisfunction(id) {\r\n    console.log(id);\r\n    await axiosConfig.get(`/dealer/deletebank/${id}`).then(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      console.log(rowData),\r\n      (\r\n        <Row className=\"app-user-list\">\r\n          <Col sm=\"12\"></Col>\r\n          <Col sm=\"12\">\r\n            <Card>\r\n              <Row className=\"m-2\">\r\n                <Col>\r\n                  <h1 sm=\"6\" className=\"float-left\">\r\n                    Bank For Transaction List\r\n                  </h1>\r\n                </Col>\r\n                <Col>\r\n                  {/* <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() => history.push(\"/app/setting/bank/addBank\")}\r\n                  >\r\n                    Add Bank\r\n                  </Button> */}\r\n                </Col>\r\n              </Row>\r\n              <CardBody>\r\n                {this.state.rowData === null ? null : (\r\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                      <div className=\"mb-1\">\r\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                          <DropdownToggle tag=\"div\">\r\n                            {this.gridApi\r\n                              ? this.state.currenPageSize\r\n                              : \"\" * this.state.getPageSize -\r\n                                (this.state.getPageSize - 1)}{\" \"}\r\n                            -{\" \"}\r\n                            {this.state.rowData.length -\r\n                              this.state.currenPageSize *\r\n                                this.state.getPageSize >\r\n                            0\r\n                              ? this.state.currenPageSize *\r\n                                this.state.getPageSize\r\n                              : this.state.rowData.length}{\" \"}\r\n                            of {this.state.rowData.length}\r\n                            <ChevronDown className=\"ml-50\" size={15} />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu right>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(20)}\r\n                            >\r\n                              20\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(50)}\r\n                            >\r\n                              50\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(100)}\r\n                            >\r\n                              100\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(134)}\r\n                            >\r\n                              134\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </div>\r\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                        <div className=\"table-input mr-1\">\r\n                          <Input\r\n                            placeholder=\"search...\"\r\n                            onChange={(e) =>\r\n                              this.updateSearchQuery(e.target.value)\r\n                            }\r\n                            value={this.state.value}\r\n                          />\r\n                        </div>\r\n                        <div className=\"export-btn\">\r\n                          <Button.Ripple\r\n                            color=\"primary\"\r\n                            onClick={() => this.gridApi.exportDataAsCsv()}\r\n                          >\r\n                            Export as CSV\r\n                          </Button.Ripple>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <ContextLayout.Consumer>\r\n                      {(context) => (\r\n                        <AgGridReact\r\n                          gridOptions={{}}\r\n                          rowSelection=\"multiple\"\r\n                          defaultColDef={defaultColDef}\r\n                          columnDefs={columnDefs}\r\n                          rowData={rowData}\r\n                          onGridReady={this.onGridReady}\r\n                          colResizeDefault={\"shift\"}\r\n                          animateRows={true}\r\n                          floatingFilter={false}\r\n                          pagination={true}\r\n                          paginationPageSize={this.state.paginationPageSize}\r\n                          pivotPanelShow=\"always\"\r\n                          enableRtl={context.state.direction === \"rtl\"}\r\n                        />\r\n                      )}\r\n                    </ContextLayout.Consumer>\r\n                  </div>\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    );\r\n  }\r\n}\r\nexport default BankForTransactionList;\r\n"],"sourceRoot":""}