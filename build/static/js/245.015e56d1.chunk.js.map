{"version":3,"sources":["views/apps/staffEnrollment/DMSList.js","axiosConfig.js"],"names":["DSMList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","field","width","pinned","window","innerWidth","cellRendererFramework","params","className","data","dsm_name","addres","mobile","joining_date","adhar_number","adharimg","pan_number","panImg","photograh","date_of_brith","salary_decieded","salary_date","filter","value","status","render","history","size","color","onClick","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","id","this","props","match","axiosConfig","get","then","response","console","log","JSON","stringify","a","Fragment","breadCrumbTitle","tag","length","right","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component","instance","axios","create","baseURL"],"mappings":"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","file":"static/js/245.015e56d1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { ChevronDown, Trash2, Edit } from \"react-feather\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\n// import { history } from \"../../../history\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nclass DSMList extends React.Component {\r\n  state = {\r\n    rowData: null,\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"Dsm Name\",\r\n        field: \"dsm_name\",\r\n        width: 250,\r\n        pinned: window.innerWidth > 992 ? \"left\" : false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.dsm_name}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Addres\",\r\n        field: \"addres\",\r\n        width: 250,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.addres}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Mobile\",\r\n        field: \"mobile\",\r\n        width: 250,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.mobile}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Joining Date\",\r\n        field: \"joining_date\",\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.joining_date}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Adhar Number\",\r\n        field: \"adhar_number\",\r\n        width: 125,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.adhar_number}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Adhar Img\",\r\n        field: \"adharimg\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.adharimg}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Pan Number\",\r\n        field: \"pan_number\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.pan_number}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Pan Img\",\r\n        field: \"panImg\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.panImg}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Photograh\",\r\n        field: \"photograh\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.photograh}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Date of Birth\",\r\n        field: \"date_of_brith\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.date_of_brith}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Monthly Salary\",\r\n        field: \"salary_decieded\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.salary_decieded}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Salary Date\",\r\n        field: \"salary_date\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.salary_date}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Status\",\r\n        field: \"status\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return params.value === \"Active\" ? (\r\n            <div className=\"badge badge-pill badge-success\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : params.value === \"Inactive\" ? (\r\n            <div className=\"badge badge-pill badge-warning\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : null;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        width: 150,\r\n        pinned: window.innerWidth > 992 ? \"right\" : false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Edit\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"blue\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        `/app/staffEnrollment/addDMS/${params.data._id}`\r\n                      )\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n              <Trash2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.runthisfunction(params.data._id);\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n    axiosConfig.get(`/dealer/getDsnformApp/${id}`).then((response) => {\r\n      let rowData = response.data.data;\r\n      console.log(rowData);\r\n      JSON.stringify(rowData);\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n  async runthisfunction(id) {\r\n    console.log(id);\r\n    await axiosConfig.get(`/dealer/deleteDsnform/${id}`).then((response) => {\r\n      console.log(response);\r\n    });\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"DSM List\"\r\n          // breadCrumbParent=\"Forms & Tables\"\r\n          // breadCrumbActive=\"Staff Management List\"\r\n        />\r\n        <Card className=\"overflow-hidden agGrid-card\">\r\n          <CardBody className=\"py-0\">\r\n            {this.state.rowData === null ? null : (\r\n              <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                  <div className=\"mb-1\">\r\n                    <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                      <DropdownToggle tag=\"div\">\r\n                        {this.gridApi\r\n                          ? this.state.currenPageSize\r\n                          : \"\" * this.state.getPageSize -\r\n                            (this.state.getPageSize - 1)}{\" \"}\r\n                        -{\" \"}\r\n                        {this.state.rowData.length -\r\n                          this.state.currenPageSize * this.state.getPageSize >\r\n                        0\r\n                          ? this.state.currenPageSize * this.state.getPageSize\r\n                          : this.state.rowData.length}{\" \"}\r\n                        of {this.state.rowData.length}\r\n                        <ChevronDown className=\"ml-50\" size={15} />\r\n                      </DropdownToggle>\r\n                      <DropdownMenu right>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(20)}\r\n                        >\r\n                          20\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(50)}\r\n                        >\r\n                          50\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(100)}\r\n                        >\r\n                          100\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(134)}\r\n                        >\r\n                          134\r\n                        </DropdownItem>\r\n                      </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                  </div>\r\n                  <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                    <div className=\"table-input mr-1\">\r\n                      <Input\r\n                        placeholder=\"search...\"\r\n                        onChange={(e) => this.updateSearchQuery(e.target.value)}\r\n                        value={this.state.value}\r\n                      />\r\n                    </div>\r\n                    <div className=\"export-btn\">\r\n                      <Button.Ripple\r\n                        color=\"primary\"\r\n                        onClick={() => this.gridApi.exportDataAsCsv()}\r\n                      >\r\n                        Export as CSV\r\n                      </Button.Ripple>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <ContextLayout.Consumer>\r\n                  {(context) => (\r\n                    <AgGridReact\r\n                      gridOptions={{}}\r\n                      rowSelection=\"multiple\"\r\n                      defaultColDef={defaultColDef}\r\n                      columnDefs={columnDefs}\r\n                      rowData={rowData}\r\n                      onGridReady={this.onGridReady}\r\n                      colResizeDefault={\"shift\"}\r\n                      animateRows={true}\r\n                      floatingFilter={false}\r\n                      pagination={true}\r\n                      paginationPageSize={this.state.paginationPageSize}\r\n                      pivotPanelShow=\"always\"\r\n                      enableRtl={context.state.direction === \"rtl\"}\r\n                    />\r\n                  )}\r\n                </ContextLayout.Consumer>\r\n              </div>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default DSMList;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  // baseURL: \"http://3.108.185.7/nodejs/api\",\r\n   baseURL: \"http://15.206.122.110:4000/api/\",\r\n  \r\n});\r\n\r\nexport default instance;\r\n"],"sourceRoot":""}