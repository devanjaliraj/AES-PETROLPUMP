{"version":3,"sources":["views/apps/ro-configuration/PaymentModeList.js","axiosConfig.js"],"names":["PaymentModeList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","field","width","pinned","window","innerWidth","cellRendererFramework","params","className","data","dealer_name1","dealer_name","email","select_bank","name_of_bank","select_mode","mode","settlement_day","size","color","onClick","history","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","a","axiosConfig","get","then","response","console","log","id","this","Fragment","breadCrumbTitle","tag","length","right","placeholder","onChange","e","target","value","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component","instance","axios","create","baseURL"],"mappings":"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","file":"static/js/169.cfdbfa1a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { history } from \"../../../history\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { ChevronDown, Trash2, Edit } from \"react-feather\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nclass PaymentModeList extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"Dealer Name\",\r\n        field: \"dealer_name1.dealer_name\",\r\n        width: 150,\r\n        pinned: window.innerWidth > 992 ? \"left\" : false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.dealer_name1?.dealer_name}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Email\",\r\n        field: \"dealer_name1.email\",\r\n        width: 150,\r\n        pinned: window.innerWidth > 992 ? \"left\" : false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.dealer_name1?.email}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Select Bank\",\r\n        field: \"select_bank.name_of_bank\",\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex justify-content-center\">\r\n              <span>{params.data.select_bank?.name_of_bank}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Select Mode\",\r\n        field: \"select_mode.mode\",\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.select_mode?.mode}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      // {\r\n      //   headerName: \"Document Upload\",\r\n      //   field: \"select_bank.document_upload\",\r\n      //   width: 140,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex justify-content-center\">\r\n      //         <span>{params.data.select_bank?.document_upload}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n      {\r\n        headerName: \"Settlement Day\",\r\n        field: \"settlement_day\",\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.settlement_day}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              {/* <Eye\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"green\"\r\n                onClick={() => history.push(\"/app/ro-configuration/roForm\")}\r\n              /> */}\r\n\r\n              <Edit\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"blue\"\r\n                onClick={() =>\r\n                history.push(\r\n                `/app/ro-configuration/paymentModeAvalable/${params.data._id}`\r\n                  )\r\n                }\r\n              />\r\n              <Trash2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.runthisfunction(params.data._id);\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  async componentDidMount() {\r\n    await axiosConfig\r\n      .get(\"/dealer/allpayment\")\r\n      .then((response) => {\r\n        const rowData = response.data.data;\r\n        console.log(rowData);\r\n        this.setState({ rowData });\r\n      });\r\n  }\r\n  async runthisfunction(id) {\r\n    console.log(id);\r\n    await axiosConfig.get(`/dealer/deletepayment/${id}`).then((response) => {\r\n      console.log(response);\r\n    });\r\n  }\r\n  \r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Payment Mode List\"\r\n\r\n          // breadCrumbParent=\"Forms & Tables\"\r\n          // breadCrumbActive=\"Ro Configuration\"\r\n        />\r\n        <Card className=\"overflow-hidden agGrid-card\">\r\n          <CardBody className=\"py-0\">\r\n            {this.state.rowData === null ? null : (\r\n              <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                  <div className=\"mb-1\">\r\n                    <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                      <DropdownToggle tag=\"div\">\r\n                        {this.gridApi\r\n                          ? this.state.currenPageSize\r\n                          : \"\" * this.state.getPageSize -\r\n                            (this.state.getPageSize - 1)}{\" \"}\r\n                        -{\" \"}\r\n                        {this.state.rowData.length -\r\n                          this.state.currenPageSize * this.state.getPageSize >\r\n                        0\r\n                          ? this.state.currenPageSize * this.state.getPageSize\r\n                          : this.state.rowData.length}{\" \"}\r\n                        of {this.state.rowData.length}\r\n                        <ChevronDown className=\"ml-50\" size={15} />\r\n                      </DropdownToggle>\r\n                      <DropdownMenu right>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(20)}\r\n                        >\r\n                          20\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(50)}\r\n                        >\r\n                          50\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(100)}\r\n                        >\r\n                          100\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(134)}\r\n                        >\r\n                          134\r\n                        </DropdownItem>\r\n                      </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                  </div>\r\n                  <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                    <div className=\"table-input mr-1\">\r\n                      <Input\r\n                        placeholder=\"search...\"\r\n                        onChange={(e) => this.updateSearchQuery(e.target.value)}\r\n                        value={this.state.value}\r\n                      />\r\n                    </div>\r\n                    <div className=\"export-btn\">\r\n                      <Button.Ripple\r\n                        color=\"primary\"\r\n                        onClick={() => this.gridApi.exportDataAsCsv()}\r\n                      >\r\n                        Export as CSV\r\n                      </Button.Ripple>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <ContextLayout.Consumer>\r\n                  {(context) => (\r\n                    <AgGridReact\r\n                      gridOptions={{}}\r\n                      rowSelection=\"multiple\"\r\n                      defaultColDef={defaultColDef}\r\n                      columnDefs={columnDefs}\r\n                      rowData={rowData}\r\n                      onGridReady={this.onGridReady}\r\n                      colResizeDefault={\"shift\"}\r\n                      animateRows={true}\r\n                      floatingFilter={true}\r\n                      pagination={true}\r\n                      paginationPageSize={this.state.paginationPageSize}\r\n                      pivotPanelShow=\"always\"\r\n                      enableRtl={context.state.direction === \"rtl\"}\r\n                    />\r\n                  )}\r\n                </ContextLayout.Consumer>\r\n              </div>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default PaymentModeList;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://3.108.185.7/nodejs/api\",\r\n  \r\n});\r\n\r\nexport default instance;\r\n"],"sourceRoot":""}