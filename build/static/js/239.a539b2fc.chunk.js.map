{"version":3,"sources":["views/apps/stockmanagement/FuelStockList.js","axiosConfig.js"],"names":["FuelStockList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","field","width","pinned","window","innerWidth","cellRendererFramework","params","className","data","date","filter","tank","meter_sales","testing","net_sales","tank_receipt","loss_booked","total_expected_stock","actual_closing_stock","loss_gain","ms_closing","hsd_closing","msactual_closing","hsdactual_closing","size","color","onClick","selectedData","gridApi","getSelectedRows","runthisfunction","_id","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","id","this","props","match","axiosConfig","get","then","response","JSON","stringify","a","console","log","Fragment","breadCrumbTitle","tag","length","right","placeholder","onChange","e","target","value","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component","instance","axios","create","baseURL"],"mappings":"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","file":"static/js/239.a539b2fc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { ChevronDown, Trash2 } from \"react-feather\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\n// import { history } from \"../../../history\";\r\n\r\nclass FuelStockList extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"Date\",\r\n        field: \"date\",\r\n        width: 120,\r\n        pinned: window.innerWidth > 992 ? \"left\" : false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.date}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Grade\",\r\n        field: \"tank.tank\",\r\n        filter: false,\r\n        width: 100,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.tank.tank}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Meter Sales\",\r\n        field: \"meter_sales\",\r\n        filter: false,\r\n        width: 100,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.meter_sales}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Testing\",\r\n        field: \"testing\",\r\n        filter: false,\r\n        width: 100,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.testing}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Net Sales\",\r\n        field: \"net_sales\",\r\n        width: 100,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.net_sales}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Tank Receipt\",\r\n        field: \"tank_receipt\",\r\n        filter: false,\r\n        width: 100,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.tank_receipt}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Loss Booked\",\r\n        field: \"loss_booked\",\r\n        filter: false,\r\n        width: 100,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.loss_booked}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"total_expected_stock\",\r\n        field: \"total_expected_stock\",\r\n        filter: false,\r\n        width: 100,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.total_expected_stock}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"actual_closing_stock\",\r\n        field: \"actual_closing_stock\",\r\n        filter: false,\r\n        width: 100,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.actual_closing_stock}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"loss_gain\",\r\n        field: \"loss_gain\",\r\n        filter: false,\r\n        width: 100,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.loss_gain}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"ms_closing\",\r\n        field: \"ms_closing\",\r\n        filter: false,\r\n        width: 100,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.ms_closing}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"hsd_closing\",\r\n        field: \"hsd_closing\",\r\n        filter: false,\r\n        width: 100,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.hsd_closing}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"msactual_closing\",\r\n        field: \"msactual_closing\",\r\n        filter: false,\r\n        width: 100,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.msactual_closing}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"hsdactual_closing\",\r\n        field: \"hsdactual_closing\",\r\n        filter: false,\r\n        width: 100,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.hsdactual_closing}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        pinned: window.innerWidth > 992 ? \"right\" : false,\r\n        width: 100,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              {/* <Eye\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"green\"\r\n                onClick={() => history.push(\"/#/app/stockManagement/lubeStockForm\")}\r\n              /> */}\r\n              {/* <Edit\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"blue\"\r\n                onClick={() => history.push(`/#/app/stockManagement/lubeStockForm/${params.data._id}`)}\r\n              /> */}\r\n              <Trash2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.runthisfunction(params.data._id);\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n    axiosConfig.get(`/dealer/allFuelstockApp/${id}`).then((response) => {\r\n      let rowData = response.data.data;\r\n      JSON.stringify(rowData);\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n\r\n  async runthisfunction(id) {\r\n    console.log(id);\r\n    await axiosConfig.get(`/dealer/deleteFuelstock/${id}`).then((response) => {\r\n      console.log(response);\r\n    });\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Fuel Stock List\"\r\n          // breadCrumbParent=\"Forms & Tables\"\r\n          // breadCrumbActive=\"Stock Management\"\r\n        />\r\n        <Card className=\"overflow-hidden agGrid-card\">\r\n          <CardBody className=\"py-0\">\r\n            {this.state.rowData === null ? null : (\r\n              <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                  <div className=\"mb-1\">\r\n                    <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                      <DropdownToggle tag=\"div\">\r\n                        {this.gridApi\r\n                          ? this.state.currenPageSize\r\n                          : \"\" * this.state.getPageSize -\r\n                            (this.state.getPageSize - 1)}{\" \"}\r\n                        -{\" \"}\r\n                        {this.state.rowData.length -\r\n                          this.state.currenPageSize * this.state.getPageSize >\r\n                        0\r\n                          ? this.state.currenPageSize * this.state.getPageSize\r\n                          : this.state.rowData.length}{\" \"}\r\n                        of {this.state.rowData.length}\r\n                        <ChevronDown className=\"ml-50\" size={15} />\r\n                      </DropdownToggle>\r\n                      <DropdownMenu right>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(20)}\r\n                        >\r\n                          20\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(50)}\r\n                        >\r\n                          50\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(100)}\r\n                        >\r\n                          100\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(134)}\r\n                        >\r\n                          134\r\n                        </DropdownItem>\r\n                      </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                  </div>\r\n                  <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                    <div className=\"table-input mr-1\">\r\n                      <Input\r\n                        placeholder=\"search...\"\r\n                        onChange={(e) => this.updateSearchQuery(e.target.value)}\r\n                        value={this.state.value}\r\n                      />\r\n                    </div>\r\n                    <div className=\"export-btn\">\r\n                      <Button.Ripple\r\n                        color=\"primary\"\r\n                        onClick={() => this.gridApi.exportDataAsCsv()}\r\n                      >\r\n                        Export as CSV\r\n                      </Button.Ripple>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <ContextLayout.Consumer>\r\n                  {(context) => (\r\n                    <AgGridReact\r\n                      gridOptions={{}}\r\n                      rowSelection=\"multiple\"\r\n                      defaultColDef={defaultColDef}\r\n                      columnDefs={columnDefs}\r\n                      rowData={rowData}\r\n                      onGridReady={this.onGridReady}\r\n                      colResizeDefault={\"shift\"}\r\n                      animateRows={true}\r\n                      floatingFilter={false}\r\n                      pagination={true}\r\n                      paginationPageSize={this.state.paginationPageSize}\r\n                      pivotPanelShow=\"always\"\r\n                      enableRtl={context.state.direction === \"rtl\"}\r\n                    />\r\n                  )}\r\n                </ContextLayout.Consumer>\r\n              </div>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default FuelStockList;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://3.108.185.7/nodejs/api\",\r\n  \r\n});\r\n\r\nexport default instance;\r\n"],"sourceRoot":""}