{"version":3,"sources":["views/apps/ro-configuration/NozzleMapList.js"],"names":["NozzleMapList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","field","width","pinned","window","innerWidth","cellRendererFramework","params","className","data","dealer_id","dealer_name","email","nozzle","mpd","bay","tank_map","tank","console","log","render","history","size","color","onClick","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axiosConfig","get","then","response","this","Fragment","breadCrumbTitle","tag","length","right","placeholder","onChange","e","target","value","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/245.d2c2ad5c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { ChevronDown } from \"react-feather\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport { Trash2, Edit, Eye } from \"react-feather\";\r\n// import { history } from \"../../../history\";\r\nimport { Route } from 'react-router-dom'\r\n\r\nclass NozzleMapList extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      // {\r\n      //   headerName: \"S.No\",\r\n      //   valueGetter: \"node.rowIndex + 1\",\r\n      //   field: \"node.rowIndex + 1\",\r\n      //   width: 150,\r\n      //   filter: false,\r\n      //   checkboxSelection: true,\r\n      //   headerCheckboxSelectionFilteredOnly: true,\r\n      //   headerCheckboxSelection: true,\r\n      // },\r\n      \r\n      {\r\n        headerName: \"Dealer Name\",\r\n        field: \"dealer_id.dealer_name\",\r\n        width: 140,\r\n        pinned: window.innerWidth > 992 ? \"left\" : false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.dealer_id?.dealer_name}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Email\",\r\n        field: \"dealer_id.email\",\r\n        width: 140,\r\n        pinned: window.innerWidth > 992 ? \"left\" : false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.dealer_id?.email}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Nozzle\",\r\n        field: \"nozzle\",\r\n        width: 120,\r\n        pinned: window.innerWidth > 992 ? \"left\" : false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.nozzle}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"MPD\",\r\n        field: \"mpd\",\r\n        width: 120,\r\n        // pinned: window.innerWidth > 992 ? \"left\" : false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.mpd}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Bay\",\r\n        field: \"bay\",\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.bay}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Tank\",\r\n        field: \"tank_map.tank\",\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.tank_map?.tank}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n   \r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        width: 120,\r\n        pinned: window.innerWidth > 992 ? \"right\" : false,\r\n\r\n        cellRendererFramework: (params) => {\r\n          console.log('@@@@id@@@@@@@@@@',params)\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Route render={({ history}) => (\r\n              <Eye\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"green\"\r\n                onClick={() => history.push(`/app/ro-configuration/NozzleList/${params.data.dealer_id._id}`)}\r\n              /> )} />\r\n               <Route render={({ history}) => (\r\n\r\n              <Edit\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"blue\"\r\n                onClick={() => history.push(`/app/ro-configuration/EditNozzleMap/${params.data._id}`)}\r\n                /> )} />\r\n              <Trash2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.runthisfunction(params.data._id);\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  async componentDidMount() {\r\n    await axiosConfig\r\n      .get(\"/dealer/allnozzle\")\r\n      .then((response) => {\r\n        const rowData = response.data.data;\r\n        console.log(rowData);\r\n        this.setState({ rowData });\r\n      });\r\n  }\r\n//   async runthisfunction(id) {\r\n//     console.log(id);\r\n//     await axiosConfig.get(`/dealer/deletedealershipform/${id}`).then((response) => {\r\n//       console.log(response);\r\n//     });\r\n//   }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Nozzle List\"\r\n          // breadCrumbParent=\"Forms & Tables\"\r\n          // breadCrumbActive=\"Dealer List\"\r\n        />\r\n        <Card className=\"overflow-hidden agGrid-card\">\r\n          <CardBody className=\"py-0\">\r\n            {this.state.rowData === null ? null : (\r\n              <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                  <div className=\"mb-1\">\r\n                    <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                      <DropdownToggle tag=\"div\">\r\n                        {this.gridApi\r\n                          ? this.state.currenPageSize\r\n                          : \"\" * this.state.getPageSize -\r\n                            (this.state.getPageSize - 1)}{\" \"}\r\n                        -{\" \"}\r\n                        {this.state.rowData.length -\r\n                          this.state.currenPageSize * this.state.getPageSize >\r\n                        0\r\n                          ? this.state.currenPageSize * this.state.getPageSize\r\n                          : this.state.rowData.length}{\" \"}\r\n                        of {this.state.rowData.length}\r\n                        <ChevronDown className=\"ml-50\" size={15} />\r\n                      </DropdownToggle>\r\n                      <DropdownMenu right>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(20)}\r\n                        >\r\n                          20\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(50)}\r\n                        >\r\n                          50\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(100)}\r\n                        >\r\n                          100\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(134)}\r\n                        >\r\n                          134\r\n                        </DropdownItem>\r\n                      </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                  </div>\r\n                  <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                    <div className=\"table-input mr-1\">\r\n                      <Input\r\n                        placeholder=\"search...\"\r\n                        onChange={(e) => this.updateSearchQuery(e.target.value)}\r\n                        value={this.state.value}\r\n                      />\r\n                    </div>\r\n                    <div className=\"export-btn\">\r\n                      <Button.Ripple\r\n                        color=\"primary\"\r\n                        onClick={() => this.gridApi.exportDataAsCsv()}\r\n                      >\r\n                        Export as CSV\r\n                      </Button.Ripple>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <ContextLayout.Consumer>\r\n                  {(context) => (\r\n                    <AgGridReact\r\n                      gridOptions={{}}\r\n                      rowSelection=\"multiple\"\r\n                      defaultColDef={defaultColDef}\r\n                      columnDefs={columnDefs}\r\n                      rowData={rowData}\r\n                      onGridReady={this.onGridReady}\r\n                      colResizeDefault={\"shift\"}\r\n                      animateRows={true}\r\n                      floatingFilter={true}\r\n                      pagination={true}\r\n                      paginationPageSize={this.state.paginationPageSize}\r\n                      pivotPanelShow=\"always\"\r\n                      enableRtl={context.state.direction === \"rtl\"}\r\n                    />\r\n                  )}\r\n                </ContextLayout.Consumer>\r\n              </div>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default NozzleMapList;"],"sourceRoot":""}