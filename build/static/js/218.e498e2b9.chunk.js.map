{"version":3,"sources":["views/apps/ro-configuration/NozzleList.js","axiosConfig.js"],"names":["NozzleList","props","state","data","rowData","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","field","width","pinned","window","innerWidth","cellRendererFramework","params","className","nozzle","mpd","bay","tank_map","tank","console","log","render","history","size","color","onClick","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","id","this","match","axiosConfig","get","then","response","setState","catch","error","Fragment","tag","currenPageSize","getPageSize","length","right","filterSize","placeholder","onChange","e","updateSearchQuery","target","value","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","onGridReady","colResizeDefault","animateRows","floatingFilter","pagination","paginationPageSize","pivotPanelShow","enableRtl","direction","React","Component","instance","axios","create","baseURL"],"mappings":"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","file":"static/js/218.e498e2b9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { ChevronDown } from \"react-feather\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\n// import Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport { Trash2, Edit, Eye } from \"react-feather\";\r\n// import { history } from \"../../../history\";\r\nimport { Route } from \"react-router-dom\";\r\nclass NozzleList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: {},\r\n      rowData: [],\r\n      defaultColDef: {\r\n        sortable: true,\r\n        editable: true,\r\n        resizable: true,\r\n        suppressMenu: true,\r\n      },\r\n      columnDefs: [\r\n        {\r\n          headerName: \"Nozzle\",\r\n          field: \"nozzle\",\r\n          width: 120,\r\n          pinned: window.innerWidth > 992 ? \"left\" : false,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"d-flex align-items-center cursor-pointer\">\r\n                <span>{params.data.nozzle}</span>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"MPD\",\r\n          field: \"mpd\",\r\n          width: 120,\r\n          // pinned: window.innerWidth > 992 ? \"left\" : false,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"d-flex align-items-center cursor-pointer\">\r\n                <span>{params.data.mpd}</span>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Bay\",\r\n          field: \"bay\",\r\n          width: 120,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"d-flex align-items-center cursor-pointer\">\r\n                <span>{params.data.bay}</span>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Tank\",\r\n          field: \"tank_map.tank\",\r\n          width: 120,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"d-flex align-items-center cursor-pointer\">\r\n                <span>{params.data.tank_map?.tank}</span>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Actions\",\r\n          field: \"sortorder\",\r\n          width: 120,\r\n          pinned: window.innerWidth > 992 ? \"right\" : false,\r\n\r\n          cellRendererFramework: (params) => {\r\n            console.log(\"@@@@id@@@@@@@@@@\", params);\r\n            return (\r\n              <div className=\"actions cursor-pointer\">\r\n                {/* <Route\r\n                  render={({ history }) => (\r\n                    <Eye\r\n                      className=\"mr-50\"\r\n                      size=\"25px\"\r\n                      color=\"green\"\r\n                      onClick={() =>\r\n                        history.push(\r\n                          `/app/ro-configuration/NozzleList/${params.data._id}`\r\n                        )\r\n                      }\r\n                    />\r\n                  )}\r\n                /> */}\r\n                <Route\r\n                  render={({ history }) => (\r\n                    <Edit\r\n                      className=\"mr-50\"\r\n                      size=\"25px\"\r\n                      color=\"blue\"\r\n                      onClick={() =>\r\n                        history.push(\r\n                          `/app/ro-configuration/EditNozzleMap/${params.data._id}`\r\n                        )\r\n                      }\r\n                    />\r\n                  )}\r\n                />\r\n                <Trash2\r\n                  className=\"mr-50\"\r\n                  size=\"25px\"\r\n                  color=\"red\"\r\n                  onClick={() => {\r\n                    let selectedData = this.gridApi.getSelectedRows();\r\n                    this.runthisfunction(params.data._id);\r\n                    this.gridApi.updateRowData({ remove: selectedData });\r\n                  }}\r\n                />\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .get(`/dealer/allnozzleApp/${id}`)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          // tank: response.data.data.tank,\r\n          // nozzle: response.data.data.nozzle,\r\n          // mpd: response.data.data.mpd,\r\n          // bay: response.data.data.bay,\r\n        });\r\n        const rowData = response.data.data;\r\n        console.log(rowData);\r\n        this.setState({ rowData });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          <Card className=\"overflow-hidden agGrid-card\">\r\n            <CardBody className=\"py-0\">\r\n              {this.state.rowData === null ? null : (\r\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <div className=\"mb-1\">\r\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                        <DropdownToggle tag=\"div\">\r\n                          {this.gridApi\r\n                            ? this.state.currenPageSize\r\n                            : \"\" * this.state.getPageSize -\r\n                              (this.state.getPageSize - 1)}{\" \"}\r\n                          -{\" \"}\r\n                          {this.state.rowData.length -\r\n                            this.state.currenPageSize * this.state.getPageSize >\r\n                          0\r\n                            ? this.state.currenPageSize * this.state.getPageSize\r\n                            : this.state.rowData.length}{\" \"}\r\n                          of {this.state.rowData.length}\r\n                          <ChevronDown className=\"ml-50\" size={15} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(20)}\r\n                          >\r\n                            20\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(50)}\r\n                          >\r\n                            50\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(100)}\r\n                          >\r\n                            100\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            tag=\"div\"\r\n                            onClick={() => this.filterSize(134)}\r\n                          >\r\n                            134\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                      <div className=\"table-input mr-1\">\r\n                        <Input\r\n                          placeholder=\"search...\"\r\n                          onChange={(e) =>\r\n                            this.updateSearchQuery(e.target.value)\r\n                          }\r\n                          value={this.state.value}\r\n                        />\r\n                      </div>\r\n                      <div className=\"export-btn\">\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          onClick={() => this.gridApi.exportDataAsCsv()}\r\n                        >\r\n                          Export as CSV\r\n                        </Button.Ripple>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <ContextLayout.Consumer>\r\n                    {(context) => (\r\n                      <AgGridReact\r\n                        gridOptions={{}}\r\n                        rowSelection=\"multiple\"\r\n                        defaultColDef={defaultColDef}\r\n                        columnDefs={columnDefs}\r\n                        rowData={rowData}\r\n                        onGridReady={this.onGridReady}\r\n                        colResizeDefault={\"shift\"}\r\n                        animateRows={true}\r\n                        floatingFilter={false}\r\n                        pagination={true}\r\n                        paginationPageSize={this.state.paginationPageSize}\r\n                        pivotPanelShow=\"always\"\r\n                        enableRtl={context.state.direction === \"rtl\"}\r\n                      />\r\n                    )}\r\n                  </ContextLayout.Consumer>\r\n                </div>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default NozzleList;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://3.108.185.7/nodejs/api\",\r\n  \r\n});\r\n\r\nexport default instance;\r\n"],"sourceRoot":""}