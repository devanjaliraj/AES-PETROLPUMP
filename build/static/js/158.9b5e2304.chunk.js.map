{"version":3,"sources":["views/apps/ro-configuration/EditTankMap.js","../node_modules/reactstrap/es/Form.js"],"names":["tankOptions","EditTankMap","props","changeHandler","e","setState","target","name","value","submitHandler","preventDefault","id","match","params","axios","post","state","then","response","console","log","status","data","tank","length","map","push","alert","catch","error","handleChangeTank","selectedTankOption","filteredProTank","filter","event","_id","handleChangeMapTank","selectedMapTankOption","handleChangeMapTank1","selectedMapTankOption1","dealerId","Product","label","capacity","bind","this","get","sm","listTag","href","tag","active","className","col-sm-6","onClick","history","onSubmit","md","classNamePrefix","type","defaultValue","options","onChange","menuPlacement","maxMenuHeight","lg","isClearable","Ripple","color","Component","_excluded","propTypes","children","PropTypes","node","inline","bool","tagPropType","innerRef","oneOfType","object","func","string","cssModule","Form","_Component","_this","call","getRef","_assertThisInitialized","submit","_inheritsLoose","_proto","prototype","ref","render","_this$props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/158.9b5e2304.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { history } from \"../../../history\";\r\n// import swal from \"sweetalert\";\r\nimport Select from \"react-select\";\r\nconst tankOptions = [];\r\nexport default class EditTankMap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        // tank : \"\", \r\n        // Product: \"\",\r\n        // capacity: \"\",\r\n        dealerId : '',\r\n        tank:[],\r\n        Product : [\r\n            { value: \"ms\", label: \"MS\" },\r\n            { value: \"hsd\", label:\"HSD\" }],\r\n         selectedTankOption:null,\r\n      selectedMapTankOption:null,\r\n      capacity : [\r\n        { value: \"10kl\", label: \"10kl\" },\r\n        { value: \"15kl\", label:\"15kl\" } ,\r\n        { value: \"20kl\", label: \"20kl\" },\r\n        { value: \"40kl\", label:\"40kl\" },\r\n         { value: \"45kl\", label: \"45kl\" },\r\n        { value: \"80kl\", label:\"80kl\" }],\r\n        selectedMapTankOption1:null,\r\n\r\n    };\r\n    this.submitHandler = this.submitHandler.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n    this.setState({ dealerId : id });\r\n    axios \r\n    .get(`http://3.108.185.7/nodejs/api/dealer/getonetank/${id}`)\r\n    .then(response => {\r\n      console.log(response);\r\n      this.setState({\r\n        //   tank: response.data.data.tank,\r\n        //   Product: response.data.data.Product,\r\n        //   capacity: response.data.data.capacity,\r\n         \r\n      });\r\n    })\r\n    .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n    }\r\n    changeHandler = e => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n      };\r\n      submitHandler = e => {\r\n        e.preventDefault();\r\n        let { id } = this.props.match.params;\r\n        axios\r\n      .post(`http://3.108.185.7/nodejs/api/dealer/updattankmap/${id}`,this.state)\r\n      .then(response => {\r\n        console.log(response);\r\n\r\n        // swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        // this.props.history.push(\"/app/ro-configuration/tankMapList\");\r\n    // }\r\n    // else{\r\n    //   alert('Something went wrong in Dealer Shipform Api');\r\n    // }\r\n    \r\n    if(response.status === 200){\r\n        let data = response.data.data;\r\n         if(data.tank.length > 0){\r\n         data.tank.map((tank) => {\r\n          let tankObj = {\r\n            // value: tank._id, \r\n            // label: tank.tank\r\n          };\r\n          tankOptions.push(tankObj);\r\n         })\r\n        }\r\n      \r\n    //   if(data.mpd_map.length > 0){\r\n    //     let mpdObj = {}\r\n    //      data.mpd_map.map((mpd) => {\r\n    //      mpdObj = {\r\n    //          value: mpd._id, \r\n    //          label: mpd.mpd_number\r\n    //        };\r\n    //        mpdOptions.push(mpdObj);\r\n    //       })\r\n    //      }\r\n\r\n    //   if(data.bay_map.length > 0){\r\n    //     data.bay_map.map((bay) => {\r\n    //       let bayObj = {\r\n    //          value: bay._id, \r\n    //          label: bay.bay_number\r\n    //        };\r\n    //        bayOptions.push(bayObj);\r\n    //       })\r\n    //      }\r\n\r\n    //   if(data.nozzle_map.length > 0){\r\n    //     data.nozzle_map.map((nozzle) => {\r\n    //       let nozzleObj = {\r\n    //          value: nozzle._id, \r\n    //          label: nozzle.nozzle_number\r\n    //        };\r\n    //        nozzleOptions.push(nozzleObj);\r\n    //       })\r\n    //      }\r\n        \r\n        this.setState({\r\n        //   bay_map: data.bay_map,\r\n        //   mpd_map: data.mpd_map,\r\n        //   nozzle_map: data.nozzle_map,\r\n          tank: data.tank,\r\n          // product_map_tank: data.product_map_tank,\r\n       });\r\n      }\r\n      else{\r\n        alert('Something went wrong in Dealer Shipform Api');\r\n      }\r\n      // this.props.history.push(\"/app/ro-configuration/designYourOutletList\");\r\n    })\r\n    .catch((error) => {\r\n      console.log(error.response);\r\n    });\r\n    \r\n}\r\n\r\nhandleChangeTank = (selectedTankOption) => {\r\n    // let capacityArray = []\r\n    // let productArray = []\r\n\r\n    this.setState({ selectedTankOption }, () =>\r\n      console.log(`Option selected:`, this.state.selectedTankOption)\r\n    );\r\n    var filteredProTank = this.state.tank.filter(function(event){\r\n      if(event._id === selectedTankOption.value){\r\n       return event\r\n      } \r\n   });\r\n   \r\n   console.log('@@######filteredProTank',filteredProTank);\r\n  //  let obj1 ={}\r\n  //  if(filteredProTank.length > 0){\r\n  //    this.setState({ selectedTankCapacity : filteredProTank[0].product})\r\n  //     obj1 = {\r\n  //      value : filteredProTank[0].product_map?.product,\r\n  //      label : filteredProTank[0].product_map?.product\r\n  //    }\r\n  //    productArray.push(obj1)\r\n  //    this.setState({ tankProductOptions : productArray})\r\n  //  }\r\n\r\n\r\n    //   var filteredCapTank = this.state.tank_map.filter(function(event){\r\n    //      if(event._id === selectedTankOption.value){\r\n    //       return event\r\n    //      } \r\n    //   });\r\n      // let obj ={}\r\n      // if(filteredCapTank.length > 0){\r\n      //   this.setState({ selectedTankCapacity : filteredCapTank[0].capacity_litre?.capacity})\r\n      //    obj = {\r\n      //     value : filteredCapTank[0].capacity_litre?.capacity,\r\n      //     label : filteredCapTank[0].capacity_litre?.capacity\r\n      //   }\r\n      //   capacityArray.push(obj)\r\n      //   this.setState({ tankCapacityOptions : capacityArray})\r\n      // }\r\n  };\r\n  handleChangeMapTank = (selectedMapTankOption) => {\r\n    this.setState({ selectedMapTankOption }, () =>\r\n      console.log(`Option selected:`, this.state.selectedMapTankOption)\r\n    );\r\n  };\r\n  handleChangeMapTank1 = (selectedMapTankOption1) => {\r\n    this.setState({ selectedMapTankOption1 }, () =>\r\n      console.log(`Option selected:`, this.state.selectedMapTankOption1)\r\n    );\r\n  };\r\n\r\n  render() {\r\n   \r\n    const {\r\n        dealerId,\r\n        Product,\r\n        capacity,\r\n        tank,\r\n        selectedTankOption,\r\n        selectedMapTankOption,\r\n        selectedMapTankOption1,\r\n    } = this.state\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <div>\r\n              <Breadcrumb listTag=\"div\">\r\n                <BreadcrumbItem href=\"/analyticsDashboard\" tag=\"a\">\r\n                  Home\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem href=\"/app/ro-configuration/tankmapList\" tag=\"a\">\r\n                {/* Bank For Transaction List */}\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem active>Edit Tank\r\n                Map\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Edit Tank Map</h1>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                className=\" btn btn-danger float-right\"\r\n                onClick={() => history.push(\"/app/ro-configuration/tankMapList\")}\r\n              >\r\n                Back\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n            <Row>\r\n                {/* <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Tank</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"tank\"\r\n                    value={this.state.tank}\r\n                    onChange={this.changeHandler}>\r\n                        \r\n                  </Input>\r\n                </Col> */}\r\n                <Col md=\"6\" sm=\"12\">\r\n                <h5 className=\"my-1 text-bold-600\">Select Tank</h5>\r\n                  <Select\r\n                    className=\"React\"\r\n                    classNamePrefix=\"select\"\r\n                    name=\"tank\" \r\n                    type =\"text\"\r\n                    defaultValue={tankOptions[1]}\r\n                    options={tank}\r\n                    value={selectedTankOption}\r\n                    onChange={this.handleChangeTank}\r\n                    menuPlacement=\"auto\"\r\n                    maxMenuHeight={220}\r\n                  />\r\n              </Col>\r\n            \r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                <h5 className=\"my-1 text-bold-600\">Product</h5>\r\n                  {/* <Label>Product</Label> */}\r\n                  {/* <Select\r\n                    type=\"text\"\r\n                    name=\"Product\"\r\n                    value={this.state.Product}\r\n                    onChange={this.changeHandler}>\r\n                        <option value=\"MS\">MS</option>\r\n                        <option value= \"HSD\">Hsd</option>\r\n                  </Select> */}\r\n                     <Select\r\n                className=\"React\"\r\n                classNamePrefix=\"select\"\r\n                name=\"Product\"            \r\n                isClearable={true}\r\n                //defaultValue=''\r\n                options={Product}\r\n                value={selectedMapTankOption}\r\n                onChange={this.handleChangeMapTank}\r\n              />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                <h5 className=\"my-1 text-bold-600\">Capacity</h5>\r\n                  {/* <Label>Capacity</Label> */}\r\n                  \r\n                  <Select\r\n                className=\"React\"\r\n                classNamePrefix=\"select\"\r\n                name=\"capacity\"            \r\n                isClearable={true}\r\n                //defaultValue=''\r\n                options={capacity}\r\n                value={selectedMapTankOption1}\r\n                onChange={this.handleChangeMapTank1}\r\n              />{/* <Input\r\n                    type=\"select\"\r\n                    name=\"capacity\"\r\n                    value={this.state.capacity}\r\n                    onChange={this.changeHandler}>\r\n                         <option value=\"10kl\">10kl</option>\r\n                        <option value= \"15kl\">15kl</option> <option value=\"20kl\">20kl</option>\r\n                        <option value= \"40kl\">40kl</option> <option value=\"45kl\">45kl</option>\r\n                        <option value= \"80kl\">80kl</option>\r\n                  </Input> */}\r\n                </Col>\r\n              \r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                    onClick={() => history.push(`/app/ro-configuration/editNozzleMap/`+dealerId)} > \r\n                  \r\n                    Update\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"];\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;"],"sourceRoot":""}